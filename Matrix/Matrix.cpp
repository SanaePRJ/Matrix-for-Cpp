#include <iostream>
#include "Matrix.h"

int main()
{
/*-----Constructor-----*/
	Matrix<double> a;

	Matrix<double> b = 
	{
		{1,2,3},
		{4,5,6},
		{7,8,9}
	};
	/*----------
		1 2 3
		4 5 6
		7 8 9
	----------*/

	Matrix<double> c = b;
	/*----------
		1 2 3
		4 5 6
		7 8 9
	----------*/

	std::vector<double> d_v = {1,2,3,4,5,6,7,8,9};
	Matrix<double>      d   = std::pair<SizeT,std::vector<double>>{ {3,3},d_v };
	/*----------
		1 2 3
		4 5 6
		7 8 9
	----------*/

/*-----Operator-----*/
//破壊的
	a = b;
	/*----------
		1 2 3
		4 5 6
		7 8 9
	----------*/

	a = {
		{4,3,8},
		{8,5,0},
		{3,5,1}
	};
	/*----------
		4 3 8
		8 5 0
		3 5 1
	----------*/
	
	a += b;
	/*----------
	4 3 8   1 2 3    5  5 11
	8 5 0 + 4 5 6 = 12 10  6
	3 5 1   7 8 9   10 13 10
	----------*/

	a -= b;
	/*----------
	 5  5 11   1 2 3   4 3 6
	12 10  6 - 4 5 6 = 8 5 0
	10 13 10   7 8 9   3 5 1
	----------*/
	
	a *= b;
	/*----------
	4 3 6   1 2 3   72 87 102
	8 5 0 * 4 5 6 = 28 41  54
	3 5 1   7 8 9   30 39  48
	----------*/

	//元に戻す
	a = b;
	/*----------
	1 2 3
	4 5 6
	7 8 9
	----------*/
	a *= 3;
	a.View();
	/*----------
	 3  6  9
	12 15 18
	21 24 27
	----------*/

//非破壊的
	(b + c);
	(b - c);
	(b * c);
	(b * 5).View();

//参照
	b[4];		//5
	b[{1, 1}];	//5


}